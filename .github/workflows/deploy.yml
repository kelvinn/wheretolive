name: Test and Deploy

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    container: python:3.7.9
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt
          pip install -r requirements.txt
      - name: Run some quick tests
        run: |
          python tests.py
        env:
          DATABASE_URL: 'postgresql://postgres:postgres@postgres/postgres'

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install serverless
        run: |
          sudo npm install -g serverless
          sls plugin install -n serverless-python-requirements
          sls plugin install -n serverless-wsgi
      - name: Deploy to serverless
        run: |
          sls deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}