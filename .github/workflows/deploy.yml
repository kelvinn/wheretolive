name: Test and Deploy

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GMAPS_API_KEY: ${{ secrets.GMAPS_API_KEY }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}

jobs:
  # Label of the container job
  test:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:10.18-jessie

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
    
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt
          pip install -r requirements.txt

      - name: Run some quick tests
        run: |
          python tests.py
        env:
          # The hostname used to communicate with the PostgreSQL service container
          DATABASE_URL: "postgresql://postgres:postgres@postgres/postgres"

  deploy:
    runs-on: ubuntu-latest
    needs: test

    # if: github.event_name == 'push' # Skip on pull requests
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Fly
        run: |
          curl -L https://fly.io/install.sh | sh
      - name: Deploy to Fly
        run: |
          export FLYCTL_INSTALL="/home/runner/.fly"
          export PATH="$FLYCTL_INSTALL/bin:$PATH"
          fly version
          fly auth docker
          bash scripts/deploy.sh
        env:
          MACHINE_ID: ${{ secrets.MACHINE_ID }}